{"backend_state":"init","connection_file":"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/share/jupyter/runtime/kernel-e8989b52-c171-4c05-b1b8-af49654caf82.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0c3cb9","input":"","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"1c6926","input":"from sklearn.ensemble import RandomForestClassifier\nRF_model = RandomForestClassifier(n_estimators=10)\n\nRF_model.fit(x_train, y_train)\n\nRF_hat = RF_model.predict(x_test)\n\nrecall = sklearn.metrics.recall_score(y_test, RF_hat)\nprecision = sklearn.metrics.precision_score(y_test, RF_hat)\naccuracy = sklearn.metrics.accuracy_score(y_test, RF_hat)\nf_measure = sklearn.metrics.f1_score(y_test, RF_hat)\nprint(\"R: \", recall)\nprint(\"P: \", precision)\nprint(\"A: \", accuracy)\nprint(\"F: \", f_measure)\n\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, RF_hat), annot=True, fmt='g')","output":{"0":{"name":"stdout","output_type":"stream","text":"R:  0.9263572836409245\nP:  0.9694355897243577\nA:  0.9556722526836049\nF:  0.9474070001832509\n"},"1":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8f7b2dc0>"},"exec_count":10,"output_type":"execute_result"},"2":{"data":{"image/png":"d62e010e4e15a83782d78da43c4f76013d6ce30a","text/plain":"<Figure size 2160x2160 with 2 Axes>"},"exec_count":10,"metadata":{"image/png":{"height":1664,"width":1582}},"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"67c416","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport seaborn as sns\nimport sklearn\nfrom sklearn.model_selection import train_test_split","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"619fbd","input":"from sklearn.linear_model import SGDClassifier\nSGD_model = SGDClassifier(loss=\"perceptron\", penalty=\"l2\", max_iter=10000)\n\nSGD_model.fit(x_train, y_train)\n\nSGD_hat = SGD_model.predict(x_test)\n\nrecall = sklearn.metrics.recall_score(y_test, SGD_hat)\nprecision = sklearn.metrics.precision_score(y_test, SGD_hat)\naccuracy = sklearn.metrics.accuracy_score(y_test, SGD_hat)\nf_measure = sklearn.metrics.f1_score(y_test, SGD_hat)\nprint(\"R: \", recall)\nprint(\"P: \", precision)\nprint(\"A: \", accuracy)\nprint(\"F: \", f_measure)\n\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, SGD_hat), annot=True, fmt='g')","output":{"0":{"name":"stdout","output_type":"stream","text":"R:  0.8772227682959521\nP:  0.7032234957020057\nA:  0.7869719669472546\nF:  0.780644904775158\n"},"1":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f24ce4691f0>"},"exec_count":20,"output_type":"execute_result"},"2":{"data":{"image/png":"346a8f032079533490a3c4dbc988f9f406cdc30c","text/plain":"<Figure size 864x504 with 2 Axes>"},"exec_count":20,"metadata":{"image/png":{"height":411,"width":657},"needs_background":"light"},"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"f9a80c","input":"from sklearn.neural_network import MLPClassifier\nNeural_model = MLPClassifier(solver='lbfgs', alpha=0.1, hidden_layer_sizes=(10, 10), random_state=1)\n\nNeural_model.fit(x_train, y_train)\n\nNeural_hat = Neural_model.predict(x_test)\n\nrecall = sklearn.metrics.recall_score(y_test, Neural_hat)\nprecision = sklearn.metrics.precision_score(y_test, Neural_hat)\naccuracy = sklearn.metrics.accuracy_score(y_test, Neural_hat)\nf_measure = sklearn.metrics.f1_score(y_test, Neural_hat)\nprint(\"R: \", recall)\nprint(\"P: \", precision)\nprint(\"A: \", accuracy)\nprint(\"F: \", f_measure)\n\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, Neural_hat), annot=True, fmt='g')","output":{"0":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:549: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\n  self.n_iter_ = _check_optimize_result(\"lbfgs\", opt_res, self.max_iter)\n"},"1":{"name":"stdout","output_type":"stream","text":"R:  0.42779071850922773\nP:  0.6828256828256828\nA:  0.667734960228589\nF:  0.5260258881850729\n"},"2":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8f114190>"},"exec_count":22,"output_type":"execute_result"},"3":{"data":{"image/png":"14f672db9c8291e9c2ec0ce81438874ee63e661e","text/plain":"<Figure size 2160x2160 with 2 Axes>"},"exec_count":22,"metadata":{"image/png":{"height":1664,"width":1582}},"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"14d7df","input":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.naive_bayes import CategoricalNB\n\nNB_model = CategoricalNB()\n\nNB_model.fit(x_train, y_train)\n\nNB_hat = NB_model.predict(x_test)\n\nrecall = sklearn.metrics.recall_score(y_test,NB_hat)\nprecision = sklearn.metrics.precision_score(y_test, NB_hat)\naccuracy = sklearn.metrics.accuracy_score(y_test, NB_hat)\nf_measure = sklearn.metrics.f1_score(y_test, NB_hat)\nprint(\"R: \", recall)\nprint(\"P: \", precision)\nprint(\"A: \", accuracy)\nprint(\"F: \", f_measure)\n\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, NB_hat), annot=True, fmt='g')","output":{"0":{"name":"stdout","output_type":"stream","text":"R:  0.8740369109478588\nP:  0.8846572361262242\nA:  0.8965943316086185\nF:  0.8793150067598018\n"},"1":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8ee0c3d0>"},"exec_count":27,"output_type":"execute_result"},"2":{"data":{"image/png":"4ddf4bdcd1cbd976b7e8a269f866459df4fd4c77","text/plain":"<Figure size 2160x2160 with 2 Axes>"},"exec_count":27,"metadata":{"image/png":{"height":1664,"width":1582}},"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"682198","input":"airline_df = pd.read_csv('./Data/airline_data.csv')","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"8352f4","input":"airline_df.dropna(inplace = True)\nairline_df.reset_index(drop=True, inplace=True)\nairline_df = pd.get_dummies(airline_df, prefix = None, prefix_sep = '_', dummy_na = False, columns = ['Gender', 'Customer Type', 'Type of Travel', 'Class','satisfaction'], sparse = False, drop_first = False, dtype = None)","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"5b7e7a","input":"airline_df.columns\ncolumns_drop = ['id', 'Unnamed: 0.1', 'Unnamed: 0','satisfaction_neutral or dissatisfied', 'Gender_Female','Customer Type_disloyal Customer', 'Type of Travel_Business travel']\nairline_df.drop(columns_drop, axis=1, inplace = True)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"b91c6e","input":"sns.set(rc = {'figure.figsize':(30,30)})\nsns.heatmap(airline_df.corr(), annot=True)","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4e93fa63d0>"},"exec_count":5,"output_type":"execute_result"},"1":{"data":{"image/png":"5b37bd7ee384ac9d79b9cc2ea08d877b747740b7","text/plain":"<Figure size 2160x2160 with 2 Axes>"},"exec_count":5,"metadata":{"image/png":{"height":1847,"width":1760}},"output_type":"execute_result"}},"pos":4,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"65bd97","input":"target = airline_df[\"satisfaction_satisfied\"]\ninput_columns = airline_df.loc[:, airline_df.columns != \"satisfaction_satisfied\"]\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, train_size=0.8)","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"52dcb6","input":"from sklearn.ensemble import AdaBoostClassifier\nAda_model = AdaBoostClassifier(n_estimators=100)\n\nAda_model.fit(x_train, y_train)\n\nAda_hat = Ada_model.predict(x_test)\n\nrecall = sklearn.metrics.recall_score(y_test, Ada_hat)\nprecision = sklearn.metrics.precision_score(y_test, Ada_hat)\naccuracy = sklearn.metrics.accuracy_score(y_test, Ada_hat)\nf_measure = sklearn.metrics.f1_score(y_test, Ada_hat)\nprint(\"R: \", recall)\nprint(\"P: \", precision)\nprint(\"A: \", accuracy)\nprint(\"F: \", f_measure)\n\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, Ada_hat), annot=True, fmt='g')","output":{"0":{"name":"stdout","output_type":"stream","text":"R:  0.9130980111091203\nP:  0.9241929633659776\nA:  0.9302648853193297\nF:  0.9186119873817035\n"},"1":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8fa6d940>"},"exec_count":7,"output_type":"execute_result"},"2":{"data":{"image/png":"c6582d9869d3f3375ffe3a5962141fe1cea69bf4","text/plain":"<Figure size 2160x2160 with 2 Axes>"},"exec_count":7,"metadata":{"image/png":{"height":1664,"width":1582}},"output_type":"execute_result"}},"pos":6,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"1a689c","input":"from sklearn.neighbors import KNeighborsClassifier\nKNN_model = KNeighborsClassifier(n_neighbors=15)\n\nKNN_model.fit(x_train, y_train)\n\nKNN_hat = KNN_model.predict(x_test)\n\nrecall = sklearn.metrics.recall_score(y_test, KNN_hat)\nprecision = sklearn.metrics.precision_score(y_test, KNN_hat)\naccuracy = sklearn.metrics.accuracy_score(y_test, KNN_hat)\nf_measure = sklearn.metrics.f1_score(y_test, KNN_hat)\nprint(\"R: \", recall)\nprint(\"P: \", precision)\nprint(\"A: \", accuracy)\nprint(\"F: \", f_measure)\n\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, KNN_hat), annot=True, fmt='g')","output":{"0":{"name":"stdout","output_type":"stream","text":"R:  0.6534671205877083\nP:  0.7358014728134773\nA:  0.7495173372461194\nF:  0.6921945432977462\n"},"1":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8f899250>"},"exec_count":9,"output_type":"execute_result"},"2":{"data":{"image/png":"2948f0dba61b790c7aaffc44d8bcca1cb66c8b56","text/plain":"<Figure size 2160x2160 with 2 Axes>"},"exec_count":9,"metadata":{"image/png":{"height":1664,"width":1582}},"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"id":0,"time":1657563590154,"type":"user"}
{"last_load":1657550812358,"type":"file"}