{"backend_state":"init","connection_file":"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/share/jupyter/runtime/kernel-36c23d33-5a80-4135-80e4-65928a15dd3d.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"bcac12","input":"#svc = SVC()\n#svc.fit(x_train, y_train)\n#svc_pred = svc.predict(x_test)\n#recall = sklearn.metrics.recall_score(y_test, svc_pred)\n#precision = sklearn.metrics.precision_score(y_test, svc_pred)\n#accuracy = sklearn.metrics.accuracy_score(y_test, svc_pred)\n#f_measure = sklearn.metrics.f1_score(y_test, svc_pred)\n#print(\"R: \", recall)\n#print(\"P: \", precision)\n#print(\"A: \", accuracy)\n#print(\"F: \", f_measure)\n","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"17caa0","input":"reduced_df = airline_df.sample(frac=0.10, random_state=42)\nreduced_df.shape","output":{"0":{"data":{"text/plain":"(12949, 28)"},"exec_count":10,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"ee20d2","input":"reduced_df.satisfaction_satisfied.value_counts()","output":{"0":{"data":{"text/plain":"0    7323\n1    5626\nName: satisfaction_satisfied, dtype: int64"},"exec_count":11,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"8f0482","input":"target = reduced_df['satisfaction_satisfied']","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"6b80d2","input":"input_columns = reduced_df.loc[:, airline_df.columns != \"satisfaction_satisfied\"]","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"4f8b6f","input":"input_columns.shape","output":{"0":{"data":{"text/plain":"(12949, 27)"},"exec_count":15,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"f6ed64","input":"x_train, x_test, y_train, y_test = train_test_split(input_columns, target, stratify=target, train_size=0.8)","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"fcfcf3","input":"params = {'min_samples_split': list(range(1,7)), 'min_samples_leaf': list(range(1,7)), 'min_weight_fraction_leaf': [-3.0,-2.0,-1.0,0.0,1.0,2.0,3.0], 'max_depth': list(range(1,6)), 'ccp_alpha': [0,0,1.0,2.0,3.0]}","pos":13,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"4db0b1","input":"tree_gsearch = GSearch(DecisionTreeClassifier(), params, verbose=1)","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"caabaa","input":"tree_gsearch.fit(x_train, y_train)","output":{"0":{"name":"stdout","output_type":"stream","text":"Fitting 3 folds for each of 6300 candidates, totalling 18900 fits\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n16650 fits failed out of a total of 18900.\nThe score on these train-test partitions for these parameters will be set to nan.\nIf these failures are not expected, you can try to debug them by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n3150 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 265, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1480, in check_scalar\n    raise ValueError(\nValueError: min_samples_split == 1, must be >= 2.\n\n--------------------------------------------------------------------------------\n2250 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 286, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1480, in check_scalar\n    raise ValueError(\nValueError: min_weight_fraction_leaf == -3.0, must be >= 0.0.\n\n--------------------------------------------------------------------------------\n2250 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 286, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1480, in check_scalar\n    raise ValueError(\nValueError: min_weight_fraction_leaf == -2.0, must be >= 0.0.\n\n--------------------------------------------------------------------------------\n2250 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 286, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1480, in check_scalar\n    raise ValueError(\nValueError: min_weight_fraction_leaf == -1.0, must be >= 0.0.\n\n--------------------------------------------------------------------------------\n2250 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 286, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1489, in check_scalar\n    raise ValueError(\nValueError: min_weight_fraction_leaf == 1.0, must be <= 0.5.\n\n--------------------------------------------------------------------------------\n2250 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 286, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1489, in check_scalar\n    raise ValueError(\nValueError: min_weight_fraction_leaf == 2.0, must be <= 0.5.\n\n--------------------------------------------------------------------------------\n2250 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 286, in fit\n    check_scalar(\n  File \"/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1489, in check_scalar\n    raise ValueError(\nValueError: min_weight_fraction_leaf == 3.0, must be <= 0.5.\n\n  warnings.warn(some_fits_failed_message, FitFailedWarning)\n/projects/72aec78b-4035-4aa5-8faa-4d7af1533e7b/.local/lib/python3.8/site-packages/sklearn/model_selection/_search.py:953: UserWarning: One or more of the test scores are non-finite: [nan nan nan ... nan nan nan]\n  warnings.warn(\n"},"2":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=DecisionTreeClassifier(),\n             param_grid={&#x27;ccp_alpha&#x27;: [0, 0, 1.0, 2.0, 3.0],\n                         &#x27;max_depth&#x27;: [1, 2, 3, 4, 5],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 3, 4, 5, 6],\n                         &#x27;min_samples_split&#x27;: [1, 2, 3, 4, 5, 6],\n                         &#x27;min_weight_fraction_leaf&#x27;: [-3.0, -2.0, -1.0, 0.0,\n                                                      1.0, 2.0, 3.0]},\n             verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=DecisionTreeClassifier(),\n             param_grid={&#x27;ccp_alpha&#x27;: [0, 0, 1.0, 2.0, 3.0],\n                         &#x27;max_depth&#x27;: [1, 2, 3, 4, 5],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 3, 4, 5, 6],\n                         &#x27;min_samples_split&#x27;: [1, 2, 3, 4, 5, 6],\n                         &#x27;min_weight_fraction_leaf&#x27;: [-3.0, -2.0, -1.0, 0.0,\n                                                      1.0, 2.0, 3.0]},\n             verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(cv=3, estimator=DecisionTreeClassifier(),\n             param_grid={'ccp_alpha': [0, 0, 1.0, 2.0, 3.0],\n                         'max_depth': [1, 2, 3, 4, 5],\n                         'min_samples_leaf': [1, 2, 3, 4, 5, 6],\n                         'min_samples_split': [1, 2, 3, 4, 5, 6],\n                         'min_weight_fraction_leaf': [-3.0, -2.0, -1.0, 0.0,\n                                                      1.0, 2.0, 3.0]},\n             verbose=1)"},"exec_count":34,"output_type":"execute_result"}},"pos":15,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"f192fa","input":"tree_gsearch.best_params_","output":{"0":{"data":{"text/plain":"{'ccp_alpha': 0,\n 'max_depth': 5,\n 'min_samples_leaf': 5,\n 'min_samples_split': 2,\n 'min_weight_fraction_leaf': 0.0}"},"exec_count":35,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"6c3663","input":"tree_clf = DecisionTreeClassifier(ccp_alpha=0, max_depth=5, min_samples_leaf=5, min_samples_split=2, min_weight_fraction_leaf=0.0)\ntree_clf = tree_clf.fit(x_train, y_train)\ny_pred_tree = tree_clf.predict(x_test)\n\n#Also change max depth as well :) Great work\nfig = plt.figure(figsize=(25,20))\n_ = tree.plot_tree(tree_clf,\n                   feature_names=input_columns.columns,  \n                   class_names=['Not Satisfied','Satisfied'],\n                   filled=True, fontsize=10)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred_tree))\nprint(\"Precision:\", precision_score(y_test, y_pred_tree))","output":{"0":{"name":"stdout","output_type":"stream","text":"Accuracy: 0.9077220077220077\nPrecision: 0.9211026615969582\n"},"1":{"data":{"image/png":"7b46856f7d53afe515903b0d167bb86c737adc98","text/plain":"<Figure size 1800x1440 with 1 Axes>"},"exec_count":36,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"b741a3","input":"import pandas as pd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport sklearn\nfrom sklearn import tree\nfrom matplotlib import pyplot as plt\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import AdaBoostClassifier as ADC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.naive_bayes import CategoricalNB\nfrom sklearn.linear_model import LogisticRegression as LR\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.neighbors import BallTree\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\nfrom sklearn.model_selection import GridSearchCV as GSearch\nfrom imblearn.under_sampling import RandomUnderSampler ","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"95285d","input":"airline_df = pd.read_csv('./data/airline_data.csv')\nairline_df.dropna(inplace=True)\nairline_df.reset_index(drop=True, inplace=True)\nairline_df = pd.get_dummies(airline_df, prefix = None, prefix_sep = '_', dummy_na = False, columns = ['satisfaction','Gender', 'Customer Type', 'Type of Travel', 'Class'], sparse = False, drop_first = False, dtype = None)\ncolumns_drop = ['id', 'Unnamed: 0.1', 'Unnamed: 0', 'satisfaction_neutral or dissatisfied']\nairline_df.drop(columns_drop, axis=1, inplace = True)\n","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"a1b3c9","input":"airline_df.isnull().sum()","output":{"0":{"data":{"text/plain":"Age                                  0\nFlight Distance                      0\nInflight wifi service                0\nDeparture/Arrival time convenient    0\nEase of Online booking               0\nGate location                        0\nFood and drink                       0\nOnline boarding                      0\nSeat comfort                         0\nInflight entertainment               0\nOn-board service                     0\nLeg room service                     0\nBaggage handling                     0\nCheckin service                      0\nInflight service                     0\nCleanliness                          0\nDeparture Delay in Minutes           0\nArrival Delay in Minutes             0\nsatisfaction_satisfied               0\nGender_Female                        0\nGender_Male                          0\nCustomer Type_Loyal Customer         0\nCustomer Type_disloyal Customer      0\nType of Travel_Business travel       0\nType of Travel_Personal Travel       0\nClass_Business                       0\nClass_Eco                            0\nClass_Eco Plus                       0\ndtype: int64"},"exec_count":6,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"81784a","input":"airline_df.columns","output":{"0":{"data":{"text/plain":"Index(['Age', 'Flight Distance', 'Inflight wifi service',\n       'Departure/Arrival time convenient', 'Ease of Online booking',\n       'Gate location', 'Food and drink', 'Online boarding', 'Seat comfort',\n       'Inflight entertainment', 'On-board service', 'Leg room service',\n       'Baggage handling', 'Checkin service', 'Inflight service',\n       'Cleanliness', 'Departure Delay in Minutes', 'Arrival Delay in Minutes',\n       'satisfaction_satisfied', 'Gender_Female', 'Gender_Male',\n       'Customer Type_Loyal Customer', 'Customer Type_disloyal Customer',\n       'Type of Travel_Business travel', 'Type of Travel_Personal Travel',\n       'Class_Business', 'Class_Eco', 'Class_Eco Plus'],\n      dtype='object')"},"exec_count":7,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"ade0fb","input":"airline_df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Flight Distance</th>\n      <th>Inflight wifi service</th>\n      <th>Departure/Arrival time convenient</th>\n      <th>Ease of Online booking</th>\n      <th>Gate location</th>\n      <th>Food and drink</th>\n      <th>Online boarding</th>\n      <th>Seat comfort</th>\n      <th>Inflight entertainment</th>\n      <th>...</th>\n      <th>satisfaction_satisfied</th>\n      <th>Gender_Female</th>\n      <th>Gender_Male</th>\n      <th>Customer Type_Loyal Customer</th>\n      <th>Customer Type_disloyal Customer</th>\n      <th>Type of Travel_Business travel</th>\n      <th>Type of Travel_Personal Travel</th>\n      <th>Class_Business</th>\n      <th>Class_Eco</th>\n      <th>Class_Eco Plus</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>13</td>\n      <td>460</td>\n      <td>3</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3</td>\n      <td>5</td>\n      <td>5</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>25</td>\n      <td>235</td>\n      <td>3</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>26</td>\n      <td>1142</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25</td>\n      <td>562</td>\n      <td>2</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>61</td>\n      <td>214</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>4</td>\n      <td>5</td>\n      <td>5</td>\n      <td>3</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 28 columns</p>\n</div>","text/plain":"   Age  Flight Distance  Inflight wifi service  \\\n0   13              460                      3   \n1   25              235                      3   \n2   26             1142                      2   \n3   25              562                      2   \n4   61              214                      3   \n\n   Departure/Arrival time convenient  Ease of Online booking  Gate location  \\\n0                                  4                       3              1   \n1                                  2                       3              3   \n2                                  2                       2              2   \n3                                  5                       5              5   \n4                                  3                       3              3   \n\n   Food and drink  Online boarding  Seat comfort  Inflight entertainment  ...  \\\n0               5                3             5                       5  ...   \n1               1                3             1                       1  ...   \n2               5                5             5                       5  ...   \n3               2                2             2                       2  ...   \n4               4                5             5                       3  ...   \n\n   satisfaction_satisfied  Gender_Female  Gender_Male  \\\n0                       0              0            1   \n1                       0              0            1   \n2                       1              1            0   \n3                       0              1            0   \n4                       1              0            1   \n\n   Customer Type_Loyal Customer  Customer Type_disloyal Customer  \\\n0                             1                                0   \n1                             0                                1   \n2                             1                                0   \n3                             1                                0   \n4                             1                                0   \n\n   Type of Travel_Business travel  Type of Travel_Personal Travel  \\\n0                               0                               1   \n1                               1                               0   \n2                               1                               0   \n3                               1                               0   \n4                               1                               0   \n\n   Class_Business  Class_Eco  Class_Eco Plus  \n0               0          0               1  \n1               1          0               0  \n2               1          0               0  \n3               1          0               0  \n4               1          0               0  \n\n[5 rows x 28 columns]"},"exec_count":8,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"4bab53","input":"airline_df.dropna(inplace=True)\nairline_df.reset_index(drop=True, inplace=True)","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"5e1700","input":"**Decision Tree:**\n\nA decision tree is a graph that classifies items and whether it is true or false to the question in the box. In this example, we use satisfied for true and false for dissatisfied.\n\n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"ac8574","input":"A Decision Tree Classifier makes various questions to help determine what group a variable falls into. It goes from the top to the bottom and depending on how a question is answered the variable goes down a path to a different leaf in the tree. It goes all the way down and at the end, it puts that variable into a group. The question splits the group of variables into two sections, dissatisfied or satisfied, depending on the question. For example, the root question asks if online boarding is less than or equal to 3.5, it'll be not satisfied, but if it's greater than 3.5, it'll be satisfied. \n\n- Disadvantages=lots of parameters\n- Advantages=easy to understand\n\n","pos":18,"type":"cell"}
{"id":0,"time":1657559598020,"type":"user"}
{"last_load":1657633244830,"type":"file"}